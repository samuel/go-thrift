// This file is automatically generated. Do not modify.

package gentest

import (
	"fmt"
	"strconv"
)

var _ = fmt.Sprintf

const Bf = false
const Bt = true
const Fst = MyEnumFirst

var Stringy = map[MyEnum]string{
	MyEnumFirst:  "1st",
	MyEnumSecond: "2nd",
}

type MyEnum int32

const (
	MyEnumFirst  MyEnum = 1
	MyEnumSecond MyEnum = 2
)

var (
	MyEnumByName = map[string]MyEnum{
		"MyEnum.FIRST":  MyEnumFirst,
		"MyEnum.SECOND": MyEnumSecond,
	}
	MyEnumByValue = map[MyEnum]string{
		MyEnumFirst:  "MyEnum.FIRST",
		MyEnumSecond: "MyEnum.SECOND",
	}
)

func (e MyEnum) String() string {
	name := MyEnumByValue[e]
	if name == "" {
		name = fmt.Sprintf("Unknown enum value MyEnum(%d)", e)
	}
	return name
}

func (e MyEnum) MarshalJSON() ([]byte, error) {
	name := MyEnumByValue[e]
	if name == "" {
		name = strconv.Itoa(int(e))
	}
	return []byte("\"" + name + "\""), nil
}

func (e *MyEnum) UnmarshalJSON(b []byte) error {
	st := string(b)
	if st[0] == '"' {
		*e = MyEnum(MyEnumByName[st[1:len(st)-1]])
		return nil
	}
	i, err := strconv.Atoi(st)
	*e = MyEnum(i)
	return err
}

func (e MyEnum) Ptr() *MyEnum {
	return &e
}
